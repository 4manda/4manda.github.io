{"version":3,"sources":["components/NavBar/DropDown.js","components/NavBar/TopNav.js","components/NavBar/NavBar.js","components/resume/Profile.js","components/resume/Work.js","components/resume/Skills.js","components/resume/Education.js","components/resume/Interests.js","components/resume/Resume.js","components/resume/About.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["DropDown","_this","this","listItems","props","droplist","map","item","i","name","length","react_default","a","createElement","react_router_dom","key","to","onClick","toggleNavBar","className","toggleDrop","id","subcontent","React","Component","TopNav","navList","NavBar_DropDown","NavBar","drop","document","getElementById","classList","toggle","previousSibling","x","NavBar_TopNav","config","icon","content","loc","concat","city","region","web","href","Profile","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleScroll","e","srcElement","scrollingElement","scrollTop","setState","atTop","state","window","addEventListener","removeEventListener","_this$props","mobile","Grid","centered","Column","textAlign","Header","picture","Image","src","circular","Icon","Content","Subheader","label","Row","Segment","basic","compact","List","items","profiles","style","padding","horizontal","size","p","network","toLowerCase","as","url","title","Divider","Work","_ref","work","w","dateOptions","month","year","from","Date","startDate","toLocaleDateString","undefined","endDate","Item","position","website","company","summary","highlights","h","idx","Skills","skills","relaxed","s","header","Label","Group","keywords","k","Edu","education","area","studyType","institution","gpa","Interests","interests","structure","component","basics","Education","Resume","contextRef","createRef","columns","width","only","Sticky","context","offset","resume_Profile","resume","computer","tablet","Ref","innerRef","unstackable","part","defineProperty","toUpperCase","Home","resume_Resume","App","components_NavBar_NavBar","react_router","exact","path","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9eed753.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as Link } from 'react-router-dom';\n\nclass DropDown extends React.Component {\n  render() {\n    const dropList = this.props.droplist;\n    const listItems = dropList.map((item, i) => {\n      const name = item[0];\n      if (item.length === 1) {\n      return <Link key={i} to={\"/\" + name} onClick={() => this.props.toggleNavBar()}>{name}</Link>\n      } else {\n        return (\n          <div key={i} className=\"dropdown\">\n            <a className=\"dropbtn\" onClick={() => this.props.toggleDrop(name)}>\n              {name}\n            </a>\n            <DropDown droplist={item[1]} name={name} toggleNavBar={() => this.props.toggleNavBar()} toggleDrop={(id) => this.props.toggleDrop(id)} subcontent={true} />\n          </div>\n        );\n      }\n    });\n    if (this.props.subcontent) {\n      return <div className=\"dropdown-content subcontent\" id={this.props.name}>{listItems}</div>\n    } else {\n      return <div className=\"dropdown-content\" id={this.props.name}>{listItems}</div>\n    }\n  }\n}\n\nDropDown.propTypes = {\n  droplist: PropTypes.array.isRequired,\n  subcontent: PropTypes.object,\n  name: PropTypes.string,\n  toggleNavBar: PropTypes.func.isRequired,\n  toggleDrop: PropTypes.func.isRequired,\n};\n\nexport default DropDown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as Link } from 'react-router-dom';\nimport DropDown from './DropDown';\n\nclass TopNav extends React.Component {\n  render() {\n    const listItems = this.props.navList.map((item, i) => {\n      const name = item[0];\n      if (item.length === 1) {\n        return <li key={i}><Link to={\"/\" + name} onClick={() => this.props.toggleNavBar()}>{name}</Link></li>\n      } else {\n        return (\n          <li key={i} className=\"dropdown\">\n            <a className=\"dropbtn\" onClick={() => this.props.toggleDrop(name)}>\n              {name}\n            </a>\n            <DropDown droplist={item[1]} name={name} toggleNavBar={() => this.props.toggleNavBar()} toggleDrop={(id) => this.props.toggleDrop(id)} />\n          </li>\n        );\n      }\n    });\n    return (\n      <ul>\n        { listItems }\n        { !!listItems[1] && (\n          <li className=\"icon\">\n            <a onClick={() => this.props.toggleNavBar()}>&#9776;</a>\n          </li>\n        ) }\n      </ul>\n    );\n  }\n}\n\nTopNav.propTypes = {\n  navList: PropTypes.array,\n  toggleDrop: PropTypes.func.isRequired,\n  toggleNavBar: PropTypes.func.isRequired,\n};\n\nexport default TopNav;\n","import React from 'react';\nimport '../../styles/navbar.css';\nimport TopNav from './TopNav';\n\nconst navList = [\n  [\"home\"],\n  // [\"about\"],\n  // [\"kudos\"], // credit, awknowledgment, gratitude, kudos, recognition, gramercy\n];\n\nclass NavBar extends React.Component {\n  toggleDrop(id) {\n    const drop = document.getElementById(id);\n    drop.classList.toggle(\"show\");\n    drop.previousSibling.classList.toggle(\"arrowdown\")\n  }\n\n  toggleNavBar() {\n    const x = document.getElementById(\"topnav\");\n    if (x.className === \"topnav\") {\n      x.className += \" responsive\";\n    } else {\n      x.className = \"topnav\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"topnav\" id=\"topnav\">\n        <TopNav navList={navList} toggleDrop={(id) => this.toggleDrop(id)} toggleNavBar={() => this.toggleNavBar()} />\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport {\n  Grid,\n  Header,\n  Image,\n  Icon,\n  Segment,\n  Divider,\n  List,\n} from 'semantic-ui-react';\n\nconst config = [{\n  name: 'location',\n  icon: 'map marker alternate',\n  content: loc => `${loc.city}, ${loc.region}`,\n}, {\n  name: 'email',\n  icon: 'mail outline',\n}, {\n  name: 'website',\n  icon: 'linkify',\n  content: web => <a href={ web }>{ web }</a>,\n}]\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      atTop: true,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = e => {\n    if (e.srcElement.scrollingElement.scrollTop === 0) {\n      this.setState({ atTop: true });\n    } else {\n      this.setState({ atTop: false });\n    }\n  }\n\n  render() {\n    const { content, mobile } = this.props;\n\n    if (mobile) {\n      return (\n        <Grid centered>\n          <Grid.Column\n            textAlign=\"center\"\n            id=\"resume__persona_mobile\"\n            className={ this.state.atTop ? 'scrolled-up' : '' }\n          >\n            <Header>\n              { content.picture ? (\n                <Image src={ content.picture } circular />\n              ) : <Icon name=\"user\" /> }\n              <Header.Content>\n                { content.name }\n                <Header.Subheader>\n                  { content.label }\n                </Header.Subheader>\n              </Header.Content>\n            </Header>\n          </Grid.Column>\n          <Grid.Row>\n            <Grid.Column id=\"resume__contacts_mobile\">\n              <Segment basic compact className=\"centered\">\n                <List\n                  items={ config.map(item => content[item.name] ? ({\n                    key: item.name,\n                    icon: item.icon,\n                    content: item.content ? item.content(content[item.name]) : content[item.name],\n                  }) : null) }\n                />\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n          { !!content.profiles && (\n            <Grid.Row style={{ padding: 0 }}>\n              <Grid.Column textAlign=\"center\">\n                <List\n                  horizontal\n                  size=\"large\"\n                  items={ content.profiles.map(p => ({\n                    key: p.network,\n                    icon: p.network.toLowerCase(),\n                    as: 'a',\n                    href: p.url,\n                    title: `${content.name} on ${p.network}`,\n                  })) }\n                />\n              </Grid.Column>\n            </Grid.Row>\n          ) }\n        </Grid>\n      );\n    }\n\n    return (\n      <Segment basic>\n        { content.picture ? (\n          <Image src={ content.picture } size=\"small\" circular centered />\n        ) : <Icon name=\"user\" /> }\n        <Header textAlign=\"center\">\n          { content.name }\n          <Header.Subheader content={ content.label } />\n        </Header>\n        <Divider />\n        <List\n          items={ config.map(item => content[item.name] ? ({\n            key: item.name,\n            icon: item.icon,\n            content: item.content ? item.content(content[item.name]) : content[item.name],\n          }) : null) }\n        />\n        { !!content.profiles && (\n          <List\n            horizontal\n            size=\"huge\"\n            items={ content.profiles.map(p => ({\n              key: p.network,\n              icon: p.network.toLowerCase(),\n              as: 'a',\n              href: p.url,\n              title: `${content.name} on ${p.network}`,\n            })) }\n          />\n        ) }\n      </Segment>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport { List } from 'semantic-ui-react';\n\nconst Work = ({ work }) => (\n  <List>\n    { work.map((w) => {\n      const dateOptions = { month: 'short', year: 'numeric' };\n      const from = new Date(w.startDate).toLocaleDateString(undefined, dateOptions);\n      const to = w.endDate ? new Date(w.endDate).toLocaleDateString(undefined, dateOptions) : 'Present';\n      return (\n        <List.Item key={ w.startDate }>\n          <List.Header as=\"h5\">\n            { w.position }\n            { ',  ' }\n            { w.website ? (\n              <a href={ w.website }>{ w.company }</a>\n            ) : w.company }\n          </List.Header>\n          <List.Content>\n            <p className=\"text__muted\">{ `${from} - ${to}` }</p>\n            <p>{ w.summary }</p>\n            <List.List as=\"ul\">\n              { w.highlights.map((h, idx) => (\n                <List.Item key={ idx } as=\"li\" content={ h } />\n              )) }\n            </List.List>\n          </List.Content>\n        </List.Item>\n      );\n    }) }\n  </List>\n);\n\nexport default Work;\n","import React from 'react';\nimport { List, Label } from 'semantic-ui-react';\n\nconst Skills = ({ skills }) => (\n  <List\n    relaxed\n    items={ skills.map(s => ({\n      key: s.name,\n      header: s.name,\n      content: (\n        <Label.Group size=\"small\">\n          { s.keywords.map(k => (\n            <Label\n              key={ k }\n              content={ k }\n              className=\"label__skills\"\n            />\n          )) }\n        </Label.Group>\n      ),\n    })) }\n  />\n);\n\nexport default Skills;\n","import React from 'react';\nimport { List, Header } from 'semantic-ui-react';\n\nconst Edu = ({ education }) => (\n  <List\n    items={ education.map((e) => {\n      const dateOptions = { month: 'short', year: 'numeric' };\n      const from = new Date(e.startDate).toLocaleDateString(undefined, dateOptions);\n      const to = e.endDate ? new Date(e.endDate).toLocaleDateString(undefined, dateOptions) : 'Present';\n      return {\n        key: e.startDate,\n        header: (\n          <Header as=\"h5\">\n            { `${e.area}, ${e.studyType}, ` }\n            { e.website ? (\n              <a href={ e.website }>{ e.institution }</a>\n            ) : e.institution }\n          </Header>\n        ),\n        content: (\n          <div>\n            <p className=\"text__muted\">{ `${from} - ${to}` }</p>\n            { !!e.gpa && <p>GPA: { e.gpa }</p> }\n          </div>\n        ),\n      };\n    }) }\n  />\n);\n\nexport default Edu;\n","import React from 'react';\nimport { List, Label } from 'semantic-ui-react';\n\nconst Interests = ({ interests }) => (\n  <List\n    relaxed\n    items={ interests.map(i => ({\n      key: i.name,\n      header: i.name,\n      content: (\n        <Label.Group size=\"small\">\n          { i.keywords.map(k => (\n            <Label\n              key={ k }\n              content={ k }\n              className=\"label__interests\"\n              basic\n            />\n          )) }\n        </Label.Group>\n      ),\n    })) }\n  />\n);\n\nexport default Interests;\n","import React from 'react';\nimport {\n  Grid,\n  Ref,\n  Sticky,\n  Segment,\n  Icon,\n  Divider,\n  Item,\n} from 'semantic-ui-react';\nimport Profile from './Profile';\nimport About from './About';\nimport Work from './Work';\nimport Skills from './Skills';\nimport Education from './Education';\nimport Interests from './Interests';\nimport resume from './resume.json';\nimport '../../styles/resume.css';\n\nconst structure = [{\n  name: 'basics',\n  title: 'About',\n  component: About,\n  icon: 'id card outline',\n}, {\n  name: 'work',\n  title: 'Experience',\n  component: Work,\n  icon: 'building outline',\n}, {\n  name: 'skills',\n  title: 'Skills',\n  component: Skills,\n  icon: 'code',\n}, {\n  name: 'education',\n  title: 'Education',\n  component: Education,\n  icon: 'graduation',\n}, {\n  name: 'interests',\n  title: 'Interests',\n  component: Interests,\n  icon: 'heart outline',\n}];\n\nclass Resume extends React.Component {\n  contextRef = React.createRef();\n\n  render() {\n    return (\n      <Grid id=\"resume\" centered columns={ 2 }>\n        <Grid.Column width={ 4 } only=\"computer tablet\">\n          <Sticky context={ this.contextRef } offset={ 44 }>\n            <Profile content={ resume.basics } />\n          </Sticky>\n        </Grid.Column>\n        <Grid.Column width={ 16 } only='mobile'>\n          <Profile content={ resume.basics } mobile contextRef={ this.contextRef } />\n        </Grid.Column>\n        <Grid.Column computer={ 12 } tablet={ 12 } mobile={ 16 }>\n          <Ref innerRef={ this.contextRef }>\n            <Segment>\n              <Item.Group unstackable>\n                { structure.map((part) => {\n                  const Content = part.component;\n                  const props = { [part.name]: resume[part.name] };\n                  return (\n                  <Item key={ part.name }>\n                    <div className=\"ui image\">\n                      <Icon name={ part.icon } size=\"large\" />\n                    </div>\n                    <Item.Content>\n                      <Item.Header>\n                        { part.title.toUpperCase() }\n                      </Item.Header>\n                      <Divider />\n                      <Content { ...props } />\n                    </Item.Content>\n                  </Item>\n                  );\n                }) }\n              </Item.Group>\n            </Segment>\n          </Ref>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n} \n             //  <Work work={ resume.work } />\n             //  <Skills skills={ resume.skills } />\n             //  <Education education={ resume.education } />\n             //  <Interests interests={ resume.interests } />\n\nexport default Resume;\n","export default ({ basics }) => basics.summary;\n","import React from 'react';\nimport Resume from './resume/Resume';\n\nconst Home = () => <Resume />;\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './styles/index.css';\n\nimport NavBar from './components/NavBar/NavBar';\nimport Home from './components/Home';\n\nconst App = props => {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <div className=\"main\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/home\" component={Home} />\n        </div>\n        {/* TODO: Add Footer */}\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}